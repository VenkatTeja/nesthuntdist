{"version":3,"sources":["api/project/project.controller.js"],"names":["index","myProjects","show","create","upsert","patch","uploadfile","destroy","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","Project","find","populate","exec","catch","builder","params","id","findById","body","data","total","type","rps","base","devCharges","others","imagesInt","imagesExt","ProjectType","projectType","_id","user","newProject","process","env","BUCKET","brochure","offers","pic","findOneAndUpdate","setDefaultsOnInsert","runValidators","config","update","accessKeyId","CELLAR_ADDON_KEY_ID","secretAccessKey","CELLAR_ADDON_KEY_SECRET","ep","Endpoint","CELLAR_ADDON_HOST","s3","S3","endpoint","signatureVersion","createReadStream","files","file","path","rename","console","log","Bucket","Key","key","Body","ACL","request","putObject","on","progress","message"],"mappings":"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","file":"project.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * GET     /api/projects              ->  index\n * POST    /api/projects              ->  create\n * GET     /api/projects/:id          ->  show\n * PUT     /api/projects/:id          ->  upsert\n * PATCH   /api/projects/:id          ->  patch\n * DELETE  /api/projects/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Project from './project.model';\nimport AWS from 'aws-sdk';\nimport fs from 'fs';\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function(entity) {\n    if(entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function(entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch(err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function(entity) {\n    if(entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function(entity) {\n    if(!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function(err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Projects\nexport function index(req, res) {\n  return Project.Project.find().populate('type').exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a list of My Projects\nexport function myProjects(req, res) {\n  return Project.Project.find({builder:req.params.id}).populate('type').exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Gets a single Project from the DB\nexport function show(req, res) {\n  return Project.Project.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Creates a new Project in the DB\nexport function create(req, res) {\n  var body = req.body.data;\n  var total = body.type.rps.base + body.type.rps.devCharges + body.type.rps.others;\n  body.type.rps.total = total;\n  var imagesInt = body.imagesInt;  \n  var imagesExt = body.imagesExt;\n  return Project.ProjectType.create(body.type)\n    .then(function(projectType){\n      body.type = projectType._id;\n      body.builder = req.user._id;\n      var newProject = new Project.Project(body);\n\n      newProject.imagesInt = [\n        'https://'+process.env.BUCKET+'.cellar.services.clever-cloud.com/imagesInt/'+newProject._id+'_1.jpg',\n        'https://'+process.env.BUCKET+'.cellar.services.clever-cloud.com/imagesInt/'+newProject._id+'_2.jpg'\n      ];\n      newProject.imagesExt = [\n        'https://'+process.env.BUCKET+'.cellar.services.clever-cloud.com/imagesExt/'+newProject._id+'_1.jpg',\n        'https://'+process.env.BUCKET+'.cellar.services.clever-cloud.com/imagesExt/'+newProject._id+'_2.jpg'\n      ];\n      newProject.brochure = 'https://'+process.env.BUCKET+'.cellar.services.clever-cloud.com/brochure/'+newProject._id+'.jpg';\n      newProject.offers.pic = 'https://'+process.env.BUCKET+'.cellar.services.clever-cloud.com/offer/'+newProject._id+'.jpg';\n      \n      newProject.save()\n      .then(respondWithResult(res, 201))\n      .catch(handleError(res));\n    })\n    .catch(handleError(res));\n  // return Project.Project.create(req.body)\n  //   .then(respondWithResult(res, 201))\n  //   .catch(handleError(res));\n}\n\n// Upserts the given Project in the DB at the specified ID\nexport function upsert(req, res) {\n  if(req.body._id) {\n    delete req.body._id;\n  }\n  return Project.Project.findOneAndUpdate(req.params.id, req.body, {upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Project in the DB\nexport function patch(req, res) {\n  if(req.body.data._id) {\n    delete req.body._id;\n  }\n  return Project.Project.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body.data))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\nexport function uploadfile(req, res) {\n  AWS.config.update({accessKeyId: process.env.CELLAR_ADDON_KEY_ID, secretAccessKey: process.env.CELLAR_ADDON_KEY_SECRET});\n  var ep = new AWS.Endpoint(process.env.CELLAR_ADDON_HOST);\n  var s3 = new AWS.S3({\n   endpoint: ep, \n   signatureVersion: 'v2'\n  });\n  var body = fs.createReadStream(req.files.file.path);\n  fs.rename(req.files.file.path,req.files.file.path+'.jpg',function(err){\n    if ( err )console.log('ERROR: ' + err);\n\n    body.path=body.path+'.jpg';\n    var params = {Bucket: process.env.BUCKET, Key: req.body.key, Body: body, ACL: 'public-read'};\n    var request = s3.putObject(params).on('httpUploadProgress', function(progress) {\n      console.log(progress);\n    }).send(function(err,data){\n      console.log(err);\n      if (err) return handleError(res, {message:\"Unable to upload image. Try again & Check your internet!\"});\n      return res.send(200);\n    }); \n  }) \n\n}\n\n// Deletes a Project from the DB\nexport function destroy(req, res) {\n  return Project.Project.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}