{"version":3,"sources":["api/project/project.model.js"],"names":["Schema","ProjectSchema","name","String","info","status","Number","type","Types","ObjectId","ref","legalBy","techBy","approvals","dtcp","Boolean","cmda","lpa","panchayath","images","location","lat","lng","brochure","offers","offerPic","mailId","builder","createdOn","Date","default","now","Project","model","ProjectTypeSchema","project","nUnits","nUnsold","lSize","min","max","bSize","budget","rps","base","devCharges","regCharges","others","total","layoutNo","uds","progress","ProjectType"],"mappings":"AAAA;;;;;;AAEA;;;;;;AACA,IAAIA,SAAS,mBAASA,MAAtB;;AAEA,IAAIC,gBAAgB,IAAID,MAAJ,CAAW;AAC7BE,QAAMC,MADuB;AAE7BC,QAAMD,MAFuB;AAG7BE,UAAQC,MAHqB,EAGb;AAChBC,QAAM,EAACA,MAAKP,OAAOQ,KAAP,CAAaC,QAAnB,EAA6BC,KAAI,aAAjC,EAJuB,EAI0B;AACvDC,WAASR,MALoB,EAKZ;AACjBS,UAAQT,MANqB,EAMb;AAChBU,aAAU,EAACC,MAAMC,OAAP,EAAgBC,MAAMD,OAAtB,EAA+BE,KAAKF,OAApC,EAA6CG,YAAYH,OAAzD,EAPmB;AAQ7BI,UAAQ,CAAChB,MAAD,CARqB;AAS7BiB,YAAU,EAACC,KAAIlB,MAAL,EAAYmB,KAAInB,MAAhB,EAAwBD,MAAMC,MAA9B,EATmB;AAU7BoB,YAAUpB,MAVmB;AAW7BqB,UAAQ,CAACrB,MAAD,CAXqB;AAY7BsB,YAAUtB,MAZmB;AAa7BuB,UAAQvB,MAbqB;AAc7BwB,WAAS,EAACpB,MAAKP,OAAOQ,KAAP,CAAaC,QAAnB,EAA6BC,KAAI,MAAjC,EAdoB;AAe7BkB,aAAW,EAACrB,MAAKsB,IAAN,EAAYC,SAAQD,KAAKE,GAAL,EAApB;;AAfkB,CAAX,CAApB;;AAmBA,IAAIC,UAAU,mBAASC,KAAT,CAAe,SAAf,EAA0BhC,aAA1B,CAAd;;AAEA,IAAIiC,oBAAoB,IAAI,mBAASlC,MAAb,CAAoB;AAC1CmC,WAAS,EAAC5B,MAAKP,OAAOQ,KAAP,CAAaC,QAAnB,EAA6BC,KAAI,SAAjC,EADiC;AAE1CH,QAAMD,MAFoC,EAE5B;;AAEd8B,UAAQ9B,MAJkC;AAK1C+B,WAAS/B,MALiC;;AAO1CgC,SAAM,EAACC,KAAIjC,MAAL,EAAakC,KAAIlC,MAAjB,EAPoC;AAQ1CmC,SAAM,EAACF,KAAIjC,MAAL,EAAakC,KAAIlC,MAAjB,EARoC;AAS1CoC,UAAO,EAACH,KAAIjC,MAAL,EAAakC,KAAIlC,MAAjB,EATmC;AAU1CqC,OAAK,EAACC,MAAKtC,MAAN,EAAcuC,YAAYvC,MAA1B,EAAkCwC,YAAYxC,MAA9C,EAAsDyC,QAAQzC,MAA9D,EAAsE0C,OAAO1C,MAA7E,EAVqC,EAUiD;;AAE3F;AACA2C,YAAW9C,MAb+B;;AAe1C;AACA+C,OAAI5C,MAhBsC;;AAkB1C;AACA6C,YAAS7C;AAnBiC,CAApB,CAAxB;;AAsBA,IAAI8C,cAAc,mBAASnB,KAAT,CAAe,aAAf,EAA8BC,iBAA9B,CAAlB;;kBAEe,EAACF,SAASA,OAAV,EAAmBoB,aAAaA,WAAhC,E","file":"project.model.js","sourcesContent":["'use strict';\n\nimport mongoose from 'mongoose';\nvar Schema = mongoose.Schema;\n\nvar ProjectSchema = new Schema({\n  name: String,\n  info: String,\n  status: Number, // Status : 0 - completed, 1 - ongoing, 2-upcoming\n  type: {type:Schema.Types.ObjectId, ref:\"ProjectType\"}, // Land/Flat/Villa\n  legalBy: String, // Is Legal Cleared?\n  techBy: String, // Is Technical Cleared?\n  approvals:{dtcp: Boolean, cmda: Boolean, lpa: Boolean, panchayath: Boolean},\n  images: [String],\n  location: {lat:String,lng:String, name: String},\n  brochure: String,\n  offers: [String],\n  offerPic: String,\n  mailId: String,\n  builder: {type:Schema.Types.ObjectId, ref:\"User\"},\n  createdOn: {type:Date, default:Date.now()}\n\n});\n\nvar Project = mongoose.model('Project', ProjectSchema);\n\nvar ProjectTypeSchema = new mongoose.Schema({\n  project: {type:Schema.Types.ObjectId, ref:\"Project\"},\n  type: Number, // Land-1, Flat-2, Villa-3, 4-Row House\n  \n  nUnits: Number,\n  nUnsold: Number,\n\n  lSize:{min:Number, max:Number},\n  bSize:{min:Number, max:Number},\n  budget:{min:Number, max:Number},\n  rps: {base:Number, devCharges: Number, regCharges: Number, others: Number, total: Number}, // Rate per square feet\n\n  // Plot\n  layoutNo : String,\n\n  //flat, villa\n  uds:Number,\n\n  // Villa,rowhouse, flat\n  progress:Number\n});\n\nvar ProjectType = mongoose.model('ProjectType', ProjectTypeSchema);\n\nexport default {Project: Project, ProjectType: ProjectType};"]}