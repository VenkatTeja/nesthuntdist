{"version":3,"sources":["api/user/user.model.js"],"names":["Promise","require","authTypes","UserSchema","name","String","lastname","middlename","fathername","mothername","dob","title","relation","gender","maritialStatus","incomeType","username","type","lowercase","email","required","indexOf","provider","role","default","password","salt","owner","attorney","cin","website","projects","Types","ObjectId","ref","shortlist","applicantStatus","pan","voterId","dLicense","passportNo","adharNo","mobile","Number","office","address1","address2","address3","landmark","city","area","country","state","pincode","fax","std","contactNo","cResidence","pResidence","occupation","crntEmpName","crntJobExp","tJobExp","empType","department","designation","marginalProfile","empId","groupEmp","bank","bankCode","branchCode","accountNo","accountType","since","isPrimary","isMicrcode","reference","phone","income","currentEmi","loanEstimate","loanTenure","salarySlips","bankStatements","fcuReport","addressProof","form16","address","facebook","twitter","google","github","virtual","get","_id","path","validate","length","value","respond","constructor","findOne","exec","then","user","id","catch","err","validatePresenceOf","pre","next","isModified","Error","makeSalt","saltErr","encryptPassword","encryptErr","hashedPassword","methods","authenticate","callback","pwdGen","byteSize","defaultByteSize","arguments","randomBytes","toString","defaultIterations","defaultKeyLength","Buffer","pbkdf2Sync","pbkdf2","key","model","deepPopulate","plugin","populate"],"mappings":"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","file":"user.model.js","sourcesContent":["'use strict';\n/*eslint no-invalid-this:0*/\nimport crypto from 'crypto';\nmongoose.Promise = require('bluebird');\nimport mongoose, {Schema} from 'mongoose';\n\nconst authTypes = ['github', 'twitter', 'facebook', 'google'];\n\nvar UserSchema = new Schema({\n  name: String,\n  lastname: String,\n  middlename: String,\n  fathername: String,\n  mothername: String,\n  dob: String,\n  title: String,\n  relation: String,\n  gender: String,\n  maritialStatus: String,\n  incomeType: String,\n\n  username: {\n    type: String,\n    lowercase: true\n    // required() {\n    //   if(authTypes.indexOf(this.provider) === -1) {\n    //     return true;\n    //   } else {\n    //     return false;\n    //   }\n    // }\n  },\n  email: {\n    type: String,\n    lowercase: true,\n    required() {\n      if(authTypes.indexOf(this.provider) === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  role: {\n    type: String,\n    default: 'user'\n  },\n  password: {\n    type: String,\n    required() {\n      if(authTypes.indexOf(this.provider) === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  },\n  provider: String,\n  salt: String,\n\n  // Builder\n  owner: String,\n  attorney: String,\n  cin: String,\n  website: String,\n  projects: [{type:Schema.Types.ObjectId, ref:\"Project\"}],\n  // type: String, // Builder/Buyer\n\n  // Buyer\n  shortlist:[{type:Schema.Types.ObjectId, ref:'Project'}],\n  //identity Details\n  applicantStatus: String,\n  pan: String,\n  voterId: String,\n  dLicense: String,\n  passportNo: String,\n  adharNo: String,\n  mobile: Number,\n\n  // Addresses\n  office:{address1: String,\n          address2: String,\n          address3: String,\n          landmark: String,\n          city: String,\n          area: String,\n          country: String, \n          state: String,\n          pincode: String,\n          fax: String,\n          std: String,\n          contactNo: String\n        },\n  cResidence: {address1: String,\n          address2: String,\n          address3: String,\n          landmark: String,\n          city: String,\n          area: String,\n          country: String, \n          state: String,\n          pincode: String,\n          fax: String,\n          std: String,\n          contactNo: String\n        },\n  pResidence: {address1: String,\n          address2: String,\n          address3: String,\n          landmark: String,\n          city: String,\n          area: String,\n          country: String, \n          state: String,\n          pincode: String,\n          fax: String,\n          std: String,\n          contactNo: String\n        },\n\n  // Occupation\n  occupation: {crntEmpName: String,\n                email: String,\n                crntJobExp: String,\n                tJobExp: String,\n                empType: String,\n                department: String,\n                designation: String,\n                marginalProfile: String,\n                empId: String,\n                groupEmp: {type: String, default:'No'}\n              },\n\n  // Bank details\n  bank: {bankCode: String, \n         branchCode: String,\n         accountNo: String,\n         accountType: String,\n         since: String,\n         isPrimary: String,\n         isMicrcode: String\n        },\n\n  // Reference\n  reference: {name: String,\n              relation: String,\n              address1: String,\n              address2: String,\n              address3: String,\n              city: String,\n              country: String, \n              state: String,\n              pincode: String,\n              email: String,\n              mobile: String,\n              phone: String,\n            },\n\n  income: Number,\n  currentEmi: Number,\n  loanEstimate: Number,\n  loanTenure: Number,\n  \n  // Documents\n  salarySlips:[String],\n  bankStatements: [String],\n  fcuReport: String,\n  addressProof: String,\n  form16: String,\n\n\n  // Common\n  address: String,\n  phone: Number,\n\n  // Auth detials\n  facebook: {},\n  twitter: {},\n  google: {},\n  github: {}\n});\n\n\n/**\n * Virtuals\n */\n\n// Public profile information\nUserSchema\n  .virtual('profile')\n  .get(function() {\n    return {\n      name: this.name,\n      role: this.role\n    };\n  });\n\n// Non-sensitive info we'll be putting in the token\nUserSchema\n  .virtual('token')\n  .get(function() {\n    return {\n      _id: this._id,\n      role: this.role\n    };\n  });\n\n/**\n * Validations\n */\n\n// Validate empty email\nUserSchema\n  .path('email')\n  .validate(function(email) {\n    if(authTypes.indexOf(this.provider) !== -1) {\n      return true;\n    }\n    return email.length;\n  }, 'Email cannot be blank');\n\n// Validate empty password\nUserSchema\n  .path('password')\n  .validate(function(password) {\n    if(authTypes.indexOf(this.provider) !== -1) {\n      return true;\n    }\n    return password.length;\n  }, 'Password cannot be blank');\n\n// Validate email is not taken\nUserSchema\n  .path('email')\n  .validate(function(value, respond) {\n    if(authTypes.indexOf(this.provider) !== -1) {\n      return respond(true);\n    }\n\n    return this.constructor.findOne({ email: value }).exec()\n      .then(user => {\n        if(user) {\n          if(this.id === user.id) {\n            return respond(true);\n          }\n          return respond(false);\n        }\n        return respond(true);\n      })\n      .catch(function(err) {\n        throw err;\n      });\n  }, 'The specified email address is already in use.');\n\nvar validatePresenceOf = function(value) {\n  return value && value.length;\n};\n\n/**\n * Pre-save hook\n */\nUserSchema\n  .pre('save', function(next) {\n    // Handle new/update passwords\n    if(!this.isModified('password')) {\n      return next();\n    }\n\n    if(!validatePresenceOf(this.password)) {\n      if(authTypes.indexOf(this.provider) === -1) {\n        return next(new Error('Invalid password'));\n      } else {\n        return next();\n      }\n    }\n\n    // Make salt with a callback\n    this.makeSalt((saltErr, salt) => {\n      if(saltErr) {\n        return next(saltErr);\n      }\n      this.salt = salt;\n      this.encryptPassword(this.password, (encryptErr, hashedPassword) => {\n        if(encryptErr) {\n          return next(encryptErr);\n        }\n        this.password = hashedPassword;\n        return next();\n      });\n    });\n  });\n\n/**\n * Methods\n */\nUserSchema.methods = {\n  /**\n   * Authenticate - check if the passwords are the same\n   *\n   * @param {String} password\n   * @param {Function} callback\n   * @return {Boolean}\n   * @api public\n   */\n  authenticate(password, callback) {\n    if(!callback) {\n      return this.password === this.encryptPassword(password);\n    }\n\n    this.encryptPassword(password, (err, pwdGen) => {\n      if(err) {\n        return callback(err);\n      }\n\n      if(this.password === pwdGen) {\n        return callback(null, true);\n      } else {\n        return callback(null, false);\n      }\n    });\n  },\n\n  /**\n   * Make salt\n   *\n   * @param {Number} [byteSize] - Optional salt byte size, default to 16\n   * @param {Function} callback\n   * @return {String}\n   * @api public\n   */\n  makeSalt(byteSize, callback) {\n    var defaultByteSize = 16;\n\n    if(typeof arguments[0] === 'function') {\n      callback = arguments[0];\n      byteSize = defaultByteSize;\n    } else if(typeof arguments[1] === 'function') {\n      callback = arguments[1];\n    } else {\n      throw new Error('Missing Callback');\n    }\n\n    if(!byteSize) {\n      byteSize = defaultByteSize;\n    }\n\n    return crypto.randomBytes(byteSize, (err, salt) => {\n      if(err) {\n        return callback(err);\n      } else {\n        return callback(null, salt.toString('base64'));\n      }\n    });\n  },\n\n  /**\n   * Encrypt password\n   *\n   * @param {String} password\n   * @param {Function} callback\n   * @return {String}\n   * @api public\n   */\n  encryptPassword(password, callback) {\n    if(!password || !this.salt) {\n      if(!callback) {\n        return null;\n      } else {\n        return callback('Missing password or salt');\n      }\n    }\n\n    var defaultIterations = 10000;\n    var defaultKeyLength = 64;\n    var salt = new Buffer(this.salt, 'base64');\n\n    if(!callback) {\n      return crypto.pbkdf2Sync(password, salt, defaultIterations, defaultKeyLength)\n        .toString('base64');\n    }\n\n    return crypto.pbkdf2(password, salt, defaultIterations, defaultKeyLength, (err, key) => {\n      if(err) {\n        return callback(err);\n      } else {\n        return callback(null, key.toString('base64'));\n      }\n    });\n  }\n};\n\nexport default mongoose.model('User', UserSchema);\n\nvar deepPopulate = require('mongoose-deep-populate')(mongoose);\nUserSchema.plugin(deepPopulate ,{populate: {}});\n"]}